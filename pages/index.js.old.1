import Head from 'next/head'
import Image from 'next/image'
import styles from '../styles/Home.module.css'

import appConfig from '../config.json'

//O return só devolve um unico componente, sendo assim, é necessário colocar filhos sobre tags
function Title_test() {
  return (
    <div>
      <style jsx>{`
      div {
        color: green;
      }
      `}</style>
      <div>
        <h1>Titulo 1</h1>
      </div>
    </div>
  )
}

//Boa pratica para juntar componentes num elemento
function Title_test_one() {
  return (
    <>
      <p>teste1</p>
      <p>teste2</p>
      <p>teste3</p>
    </>
  )
}

//Usando props
function Title_test_two(props) {
  return (
    <div>
      {props.children}
    </div>
  )
}

//Usando parametros na tag com props
function Title_test_tree(props) {
  const Tag = props.tag;
  return (
    <div>
      <Tag>
        {props.children}
      </Tag>
    </div>
  )
}

//Setando um CSS variavel
function Title_test_four(props) {
  const Tag1 = props.tag;
  return (
    <div>
      <style jsx>{`
      ${Tag1} {
          color: red;
        }
      `}</style>
      <Tag1>
        {props.children}
      </Tag1>
    </div>
  )
}

//Estilos globais
function GlobalStyles() {
  return (
    <>
      <style global jsx>{`
        /* http://meyerweb.com/eric/tools/css/reset/ 
        v2.0 | 20110126
        License: none (public domain)
        */

        html, body, div, span, applet, object, iframe,
        h1, h2, h3, h4, h5, h6, p, blockquote, pre,
        a, abbr, acronym, address, big, cite, code,
        del, dfn, em, img, ins, kbd, q, s, samp,
        small, strike, strong, sub, sup, tt, var,
        b, u, i, center,
        dl, dt, dd, ol, ul, li,
        fieldset, form, label, legend,
        table, caption, tbody, tfoot, thead, tr, th, td,
        article, aside, canvas, details, embed, 
        figure, figcaption, footer, header, hgroup, 
        menu, nav, output, ruby, section, summary,
        time, mark, audio, video {
        margin: 0;
        padding: 0;
        border: 0;
        font-size: 100%;
        font: inherit;
        vertical-align: baseline;
        }
        /* HTML5 display-role reset for older browsers */
        article, aside, details, figcaption, figure, 
        footer, header, hgroup, menu, nav, section {
        display: block;
        }
        body {
        line-height: 1;
        }
        ol, ul {
        list-style: none;
        }
        blockquote, q {
        quotes: none;
        }
        blockquote:before, blockquote:after,
        q:before, q:after {
        content: '';
        content: none;
        }
        table {
        border-collapse: collapse;
        border-spacing: 0;
        }
      `}</style>
    </>
  )
}

//Operador ternario
function Title_test_six(props) {
  const ternario = props.tag || 'p';
  const Tag = ternario;
  return (
    <div>
      <Tag>{props.children}</Tag>
    </div>
  )
}

//Chamando o valor de um json
function Title_test_five(props) {
  return (
    <div>
      <style jsx>{`
        p {
          color: ${appConfig.themes.colors.primary['050']};
          background: red; 
        }
      `}</style>  
      <p>
        {props.children}
      </p>
    </div>
  )
}

//Estilo está limitado ao componente
function Home() {
  return (
    <div>
      <GlobalStyles />
      <Title_test></Title_test>
      <Title_test_one></Title_test_one>
      <Title_test_two>Teste props</Title_test_two>
      <Title_test_tree tag="h3">pastel</Title_test_tree>
      <Title_test_four tag="p">pastel1</Title_test_four>
      <Title_test_five>pastel2</Title_test_five>
      <Title_test_six tag="h1">pastel1</Title_test_six>
      <div>Teste div normal</div>     
    </div>
)
}

export default Home
  /*return (
    <div className={styles.container}>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <main className={styles.main}>
        <h1 className={styles.title}>
          Welcome to <a href="https://nextjs.org">Next.js!</a>
        </h1>

        <p className={styles.description}>
          Get started by editing{' '}
          <code className={styles.code}>pages/index.js</code>
        </p>

        <div className={styles.grid}>
          <a href="https://nextjs.org/docs" className={styles.card}>
            <h2>Documentation &rarr;</h2>
            <p>Find in-depth information about Next.js features and API.</p>
          </a>

          <a href="https://nextjs.org/learn" className={styles.card}>
            <h2>Learn &rarr;</h2>
            <p>Learn about Next.js in an interactive course with quizzes!</p>
          </a>

          <a
            href="https://github.com/vercel/next.js/tree/canary/examples"
            className={styles.card}
          >
            <h2>Examples &rarr;</h2>
            <p>Discover and deploy boilerplate example Next.js projects.</p>
          </a>

          <a
            href="https://vercel.com/new?utm_source=create-next-app&utm_medium=default-template&utm_campaign=create-next-app"
            className={styles.card}
          >
            <h2>Deploy &rarr;</h2>
            <p>
              Instantly deploy your Next.js site to a public URL with Vercel.
            </p>
          </a>
        </div>
      </main>

      <footer className={styles.footer}>
        <a
          href="https://vercel.com?utm_source=create-next-app&utm_medium=default-template&utm_campaign=create-next-app"
          target="_blank"
          rel="noopener noreferrer"
        >
          Powered by{' '}
          <span className={styles.logo}>
            <Image src="/vercel.svg" alt="Vercel Logo" width={72} height={16} />
          </span>
        </a>
      </footer>
    </div>
  )
}
*/